<?php

use Illuminate\Database\Seeder;

class BlogsTableSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        for($i=0; $i<100; $i++) {
            DB::table('blogs')->insert([
                'title' => 'Paginating Query Builder Results',
                'description' => "There are several ways to paginate items. The simplest is by using the paginate method on the query builder or an Eloquent query. The paginate method automatically takes care of setting the proper limit and offset based on the current page being viewed by the user. By default, the current page is detected by the value of the page query string argument on the HTTP request. Of course, this value is automatically detected by Laravel, and is also automatically inserted into links generated by the paginator. In this example, the only argument passed to the paginate method is the number of items you would like displayed \"per page\". In this case, let's specify that we would like to display 15 items per page:",
                'category_id' => rand(1, count(App\Category::all())),
                'user_id' => rand(1, count(App\User::all())),
                'created_at' => Carbon\Carbon::create(2000 + rand(1, 17), rand(1, 12), rand(1, 28), rand(0,23), rand(0,59), rand(0,59))
            ]);

            DB::table('blogs')->insert([
                'title' => 'Redirect to dashboard',
                'description' => "Please how can I redirect to dashboard when logged in and I visit the registration or login url. Thank you",
                'category_id' => rand(1, count(App\Category::all())),
                'user_id' => rand(1, count(App\User::all())),
                'created_at' => Carbon\Carbon::create(2000 + rand(1, 17), rand(1, 12), rand(1, 28), rand(0,23), rand(0,59), rand(0,59))
            ]);

            DB::table('blogs')->insert([
                'title' => 'Laravel Passport login using username or email',
                'description' => "Hello, I am trying to use username or email to login to my API, I tried to change \"AuthenticatesUsers\" method \"credentials\" but had no effect. How do I configure Passport to accept both. Also, when I used a username, instead of error JSON object with a message, it only sent error 500. Where is the messages configured?",
                'category_id' => rand(1, count(App\Category::all())),
                'user_id' => rand(1, count(App\User::all())),
                'created_at' => Carbon\Carbon::create(2000 + rand(1, 17), rand(1, 12), rand(1, 28), rand(0,23), rand(0,59), rand(0,59))
            ]);
        }
    }
}
